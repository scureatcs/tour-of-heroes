{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport let HeroService = /*#__PURE__*/(() => {\n  class HeroService {\n    constructor(http, messageService) {\n      this.http = http;\n      this.messageService = messageService;\n      this.heroesUrl = 'api/heroes'; // URL to web api\n\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    log(message) {\n      this.messageService.add(`HeroService: ${message}`);\n    }\n\n    getHeroes() {\n      return this.http.get(this.heroesUrl).pipe(tap(_ => this.log('fetched heroes')), catchError(this.handleError('getHeroes', [])));\n    }\n\n    updateHero(hero) {\n      console.log(hero);\n      return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(tap(_ => {\n        console.log('update tap');\n        return this.log(`updated hero id=${hero.id}`);\n      }), catchError(this.handleError('updateHero')));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(error);\n        this.log(`${operation} failed: ${error.message}`);\n        const res = result;\n        return of(res);\n      };\n    }\n\n    getHero(id) {\n      const url = `${this.heroesUrl}/${id}`;\n      return this.http.get(url).pipe(tap(_ => this.log(`fetched hero id=${id}`)), catchError(this.handleError(`getHero id${id}`)));\n    }\n\n  }\n\n  HeroService.ɵfac = function HeroService_Factory(t) {\n    return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n  };\n\n  HeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroService,\n    factory: HeroService.ɵfac,\n    providedIn: 'root'\n  });\n  return HeroService;\n})();","map":null,"metadata":{},"sourceType":"module"}